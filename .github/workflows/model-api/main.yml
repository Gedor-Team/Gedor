name: Build app and create a release in Cloud Deploy

on:
  push:
    paths:
      - 'cc/deploy/**'
    branches:
      - main

env:
  APP: deploy  # Updated to match your folder structure

jobs:
  deploy:
    permissions:
      contents: 'read'
      id-token: 'write'

    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout code
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Authenticate with Google Cloud
      - name: Authenticate to Google Cloud
        id: auth
        uses: google-github-actions/auth@v2.1.7
        with:
          workload_identity_provider: ${{ secrets.WIF_PROVIDER }}
          service_account: ${{ secrets.WIF_SERVICE_ACCOUNT }}

      # Step 3: Set up the Google Cloud SDK
      - name: Set up Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v1
        with:
          project_id: ${{ secrets.PROJECT_ID }}

      # Step 4: Configure Docker for Google Artifact Registry
      - name: Configure Docker for Artifact Registry
        run: |
          gcloud auth configure-docker ${{ secrets.GAR_LOCATION }}-docker.pkg.dev

      # Step 5: Build and push the Docker container image
      - name: Build and Push Docker Image
        run: |
          docker build -t "${{ secrets.GAR_LOCATION }}-docker.pkg.dev/${{ secrets.PROJECT_ID }}/${{ env.APP }}/${{ env.APP }}:${{ github.sha }}" ./cc/deploy
          docker push "${{ secrets.GAR_LOCATION }}-docker.pkg.dev/${{ secrets.PROJECT_ID }}/${{ env.APP }}/${{ env.APP }}:${{ github.sha }}"

      # Step 6: Render YAML manifests from templates
      - name: Render YAML Manifests
        run: |
          export PROJECT_ID="${{ secrets.PROJECT_ID }}"
          export REGION="${{ secrets.REGION }}"
          for template in $(ls .github/workflows/model-api/config/*.template.yaml); do
            envsubst < ${template} > ${template%%.*}.yaml
          done

      # Step 7: Apply Cloud Deploy delivery pipeline and targets
      - name: Apply Cloud Deploy Pipeline
        run: |
          gcloud deploy apply --file .github/workflows/model-api/config/clouddeploy.yaml --region ${{ secrets.REGION }}

      # Step 8: Generate a unique release name
      - name: Generate Release Name
        run: |
          echo "RELEASE_NAME=${{ env.APP }}-${{ github.sha::7 }}-${{ github.run_number }}" >> $GITHUB_ENV

      # Step 9: Create a Cloud Deploy release
      - name: Create Cloud Deploy Release
        id: release
        uses: google-github-actions/create-cloud-deploy-release@v0
        with:
          delivery_pipeline: ${{ env.APP }}
          name: ${{ env.RELEASE_NAME }}
          region: ${{ secrets.REGION }}
          description: "Triggered by commit ${{ github.sha }}"
          skaffold_file: .github/workflows/model-api/config/skaffold.yaml
          images: app=${{ secrets.GAR_LOCATION }}-docker.pkg.dev/${{ secrets.PROJECT_ID }}/${{ env.APP }}/${{ env.APP }}:${{ github.sha }}

      # Step 10: Report Cloud Deploy release
      - name: Report Cloud Deploy Release
        run: |
          echo "Created release: ${{ steps.release.outputs.name }}"
          echo "Release link: ${{ steps.release.outputs.link }}"
